{"version":3,"sources":["serviceWorker.js","store/actions/GroupActions.jsx","components/GroupField/GroupField.jsx","components/GroupField/index.jsx","store/selectors/index.js","store/actions/MemberActions.jsx","components/MemberForm/MemberForm.jsx","components/MemberForm/index.jsx","components/.common/index.jsx","components/MemberList/MemberList.jsx","components/MemberList/index.jsx","components/Navigation/Navigation.jsx","components/Navigation/index.jsx","store/actions/ExpenseActions.jsx","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/index.jsx","components/ExpenseList/ExpenseList.jsx","components/ExpenseList/index.jsx","components/SuggestedPaymentsList/SuggestedPaymentsList.jsx","components/SuggestedPaymentsList/index.jsx","store/reducers/GroupReducer.jsx","store/reducers/IndexCounterReducer.jsx","store/reducers/MemberReducer.jsx","store/reducers/ExpenseReducer.jsx","store/reducers/index.js","store/reducers/SelectedGroupReducer.jsx","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","GroupActionConstants","GroupActions","name","id","type","NewGroupNameInput","_ref","createGroup","collapseParent","inputNode","useRef","_useState","useState","_useState2","Object","slicedToArray","newGroupName","setGroupName","react_default","a","createElement","className","value","onChange","event","target","onKeyPress","_ref2","key","current","blur","placeholder","ref","autoFocus","GroupEntry","_ref3","react_router_dom","to","concat","activeClassName","onClick","SavedGroups","_ref4","savedGroups","goToGroup","length","map","group","GroupField_GroupEntry","IdleDisplayText","_ref5","selectedGroup","GroupField","_ref6","_useState3","_useState4","isExpanded","toggleExpand","groupFieldNode","handleClick","e","contains","collapseField","useEffect","document","addEventListener","removeEventListener","Fragment","GroupField_NewGroupNameInput","GroupField_SavedGroups","GroupField_IdleDisplayText","getSelectedGroup","groups","arguments","undefined","connect","state","ownProps","currGroupIndex","indexCounter","dispatch","createGroupWithId","stateProps","dispatchProps","history","push","values","params","groupId","getGroupId","parseInt","getGroupMembers","members","reduce","groupMembers","memberId","objectSpread","defineProperty","getGroupExpenses","expenses","groupExpenses","expenseId","expense","paidFor","paidBy","getDetailedExpense","getSuggestedPaymentsFromState","balance","runningBalance","assign","toPay","keys","filter","balanceKey","inDebt","payments","forEach","personToPay","balanceToPay","candidate","personInDebt","owedAmount","Math","abs","payAmount","amount","from","suggestPayments","_objectSpread4","getBalance","item","MemberActionConstants","MemberActions","MemberForm","createMember","newMemberName","setNewMemberName","handleSubmit","currMemberIndex","CardTitle","title","EmptyMemberList","MemberEntry","MemberList","_common_CardTitle","MemberList_EmptyMemberList","member","MemberList_MemberEntry","NavButton","children","Navigation","context","Navigation_NavButton","ExpenseActionConstants","ExpenseActions","addExpense","description","ExpenseFormInput","fieldName","props","objectWithoutProperties","MemberSelect","selected","disabled","index","useHandler","handleChange","ExpenseForm","createExpense","setDescription","setAmount","_useState5","_useState6","setPaidBy","_useState7","_useState8","setPaidFor","canSubmit","ExpenseForm_ExpenseFormInput","ExpenseForm_MemberSelect","currExpenseIndex","_len","args","Array","_key","apply","_len2","_key2","ExpenseEntry","ExpenseList","ExpenseList_ExpenseEntry","SuggestionItem","SuggestedPaymentsList","suggestedPayments","suggestion","SuggestedPaymentsList_SuggestionItem","defaulter","1","2","initialState","3","4","5","reducers","GroupReducer","action","toConsumableArray","IndexCounterReducer","SelectedGroupReducer","MemberReducer","ExpenseReducer","reducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","rootElement","getElementById","ReactDOM","render","es","store","react_router","exact","path","component","components_GroupField","components_Navigation","components_MemberForm","components_MemberList","components_ExpenseForm","components_ExpenseList","components_SuggestedPaymentsList","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6480b3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const GroupActionConstants = {\r\n  ADD_GROUP: 'ADD_GROUP'\r\n};\r\n\r\nexport const addGroup = (name, id) => ({\r\n  type: GroupActionConstants.ADD_GROUP,\r\n  name,\r\n  id,\r\n});\r\n\r\nexport default {\r\n  addGroup\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import MemberWidget from \"./MemberWidget\";\r\nimport \"../../styles/group-field.css\";\r\n\r\nexport const NewGroupNameInput = ({ createGroup, collapseParent }) => {\r\n  const inputNode = useRef(null);\r\n\r\n  const [newGroupName, setGroupName] = useState('');\r\n  const onChange = event => setGroupName(event.target.value);\r\n  const onKeyPress = ({ key }) => {\r\n    if (key === \"Enter\") {\r\n      createGroup(newGroupName);\r\n      setGroupName('');\r\n      inputNode.current.blur();\r\n      collapseParent();\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"group-field-expanded-header\">\r\n      <div className=\"group-field-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-input fill\"\r\n          value={newGroupName}\r\n          onChange={onChange}\r\n          onKeyPress={onKeyPress}\r\n          placeholder=\"New Group Name\"\r\n          ref={inputNode}\r\n          autoFocus\r\n        />\r\n      </div>\r\n        {/* <i class=\"fas fa-times\" />\r\n        <i class=\"fas fa-greater-than\" /> */}\r\n      <hr className=\"group-field-expanded-header-divider\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GroupEntry = ({ name, id, collapseParent }) => {\r\n  return (\r\n    <NavLink\r\n      to={`/group/${id}/members`}\r\n      className=\"group-entry-container\"\r\n      activeClassName=\"group-entry-container-active\"\r\n      onClick={collapseParent}\r\n    >\r\n      <h3 className=\"group-name\">{name}</h3>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nconst SavedGroups = ({ savedGroups, goToGroup, collapseParent }) => (\r\n  <div className=\"group-entries-container\">\r\n    {savedGroups.length ?\r\n      savedGroups.map(\r\n        group => <GroupEntry\r\n          id={group.id}\r\n          name={group.name}\r\n          key={`group-${group.id}`}\r\n          goToGroup={goToGroup}\r\n          collapseParent={collapseParent}\r\n        />\r\n      ) : <em>No Groups Found</em>}\r\n  </div>\r\n);\r\n\r\nconst IdleDisplayText = ({ selectedGroup }) => (\r\n  <h3 className=\"group-field-header\">\r\n    {selectedGroup ? selectedGroup.name : 'Create New Group'}\r\n  </h3>\r\n);\r\n\r\nconst GroupField = ({ savedGroups, createGroup, selectedGroup, goToGroup }) => {\r\n  const [isExpanded, toggleExpand] = useState(false);\r\n  const groupFieldNode = useRef();\r\n\r\n  const handleClick = e => {\r\n    if (groupFieldNode.current.contains(e.target)) {\r\n      toggleExpand(true);\r\n      return;\r\n    }\r\n\r\n    toggleExpand(false);\r\n  };\r\n\r\n  const collapseField = () => toggleExpand(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`group-field-container ${isExpanded ? 'expanded' : ''} card`}\r\n      ref={groupFieldNode}\r\n    >\r\n      {isExpanded ?\r\n        <>\r\n          <NewGroupNameInput createGroup={createGroup} collapseParent={collapseField} />\r\n          <SavedGroups savedGroups={savedGroups} goToGroup={goToGroup} collapseParent={collapseField} />\r\n        </> :\r\n        <IdleDisplayText selectedGroup={selectedGroup} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupField;\r\n","import { connect } from 'react-redux';\r\n\r\nimport GroupActions from \"../../store/actions/GroupActions\";\r\nimport GroupField from \"./GroupField\";\r\n\r\nconst getSelectedGroup = (id, groups = {}) =>\r\n  (id && groups && id in groups) ? groups[id] : null;\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  currGroupIndex: state.indexCounter.groups,\r\n  savedGroups: state.groups,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createGroupWithId: (id, name) => dispatch(GroupActions.addGroup(name, id)),\r\n});\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n  const goToGroup = id => ownProps.history.push(`/group/${id}/members`);\r\n\r\n  return {\r\n    goToGroup,\r\n    createGroup: name => {\r\n      dispatchProps.createGroupWithId(\r\n        stateProps.currGroupIndex, name\r\n      );\r\n      goToGroup(stateProps.currGroupIndex);\r\n    },\r\n    savedGroups: Object.values(stateProps.savedGroups || {}),\r\n    selectedGroup: getSelectedGroup(ownProps.match.params.groupId, stateProps.savedGroups),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(\r\n  GroupField\r\n);\r\n","export const getGroupId = ownProps => parseInt(ownProps.match.params.groupId);\r\n\r\nexport const getGroupMembers = (state, groupId) => {\r\n  const { groups, members } = state;\r\n  if (!groups || !(groupId in groups) || !members) {\r\n    return {};\r\n  };\r\n\r\n  return groups[groupId].members.reduce(\r\n    (groupMembers, memberId) =>\r\n      (memberId in members) ?\r\n        { ...groupMembers, [memberId]: members[memberId] } :\r\n        groupMembers,\r\n    {}\r\n  );\r\n}\r\n\r\nexport const getDetailedExpense = (state, expenseId) => {\r\n  const { members, expenses } = state;\r\n\r\n  if (!members || !expenses || !(expenseId in expenses)) {\r\n    return {};\r\n  }\r\n\r\n  const expense = expenses[expenseId];\r\n  return {\r\n    ...expense,\r\n    paidFor: members[expense.paidFor],\r\n    paidBy: members[expense.paidBy],\r\n  };\r\n}\r\n\r\nexport const getGroupExpenses = (state, groupId) => {\r\n  const { groups, members, expenses } = state;\r\n\r\n  if (!groups || !(groupId in groups) || !members || !expenses) {\r\n    return {};\r\n  };\r\n\r\n  return groups[groupId].expenses.reduce(\r\n    (groupExpenses, expenseId) =>\r\n      (expenseId in expenses) ?\r\n        { ...groupExpenses, [expenseId]: getDetailedExpense(state, expenseId) } :\r\n        groupExpenses,\r\n    {}\r\n  )\r\n}\r\n\r\n\r\nconst getBalance = expenses => expenses.reduce(\r\n  (balance, { amount, paidBy, paidFor }) => ({\r\n    ...balance,\r\n    [paidBy.memberId]: (balance[paidBy.memberId] || 0) + amount,\r\n    [paidFor.memberId]: (balance[paidFor.memberId] || 0) - amount,\r\n  }), {}\r\n);\r\n\r\nconst suggestPayments = balance => {\r\n  const runningBalance = Object.assign({}, balance);\r\n  const toPay = Object.keys(balance).filter(balanceKey => balance[balanceKey] > 0);\r\n  const inDebt = Object.keys(balance).filter(balanceKey => balance[balanceKey] < 0);\r\n\r\n  const payments = [];\r\n  toPay.forEach(personToPay => {\r\n    let balanceToPay = runningBalance[personToPay];\r\n    while (balanceToPay > 0) {\r\n      const candidate = inDebt.filter(personInDebt => runningBalance[personInDebt] < 0)[0];\r\n      const owedAmount = Math.abs(runningBalance[candidate])\r\n      const payAmount = (balanceToPay >= owedAmount) ? owedAmount : balanceToPay;\r\n\r\n      balanceToPay -= payAmount;\r\n      runningBalance[candidate] += payAmount;\r\n\r\n      payments.push({\r\n        amount: payAmount,\r\n        from: candidate,\r\n        to: personToPay,\r\n      });\r\n    };\r\n  });\r\n\r\n  return payments;\r\n};\r\n\r\nexport const getSuggestedPaymentsFromState = (state, groupId) => {\r\n  const expenses = getGroupExpenses(state, groupId);\r\n\r\n  if (!expenses) {\r\n    return {};\r\n  }\r\n\r\n  const expenseArray = Object.values(expenses);\r\n  const suggestions = suggestPayments(getBalance(expenseArray));\r\n  return suggestions.map(item => ({\r\n    ...item,\r\n    from: state.members[item.from].name,\r\n    to: state.members[item.to].name,\r\n  }));\r\n}\r\n","export const MemberActionConstants = {\r\n  ADD_MEMBER: 'ADD_MEMBER'\r\n};\r\n\r\nexport const addMember = (name, memberId, groupId) => ({\r\n  type: MemberActionConstants.ADD_MEMBER,\r\n  name,\r\n  memberId,\r\n  groupId,\r\n});\r\n\r\nexport default {\r\n  addMember\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../../styles/member-form.css\";\r\n\r\nconst MemberForm = ({ createMember }) => {\r\n  const [newMemberName, setNewMemberName] = useState('');\r\n  const handleChange = event => setNewMemberName(event.target.value);\r\n  const handleSubmit = () => {\r\n    if (newMemberName) {\r\n      createMember(newMemberName);\r\n      setNewMemberName('');\r\n    }\r\n  }\r\n  const handleKeyPress = ({ key }) => key === \"Enter\" && handleSubmit();\r\n\r\n  return (\r\n    <div className=\"member-form card\">\r\n      <div className=\"member-form-row\">\r\n        <div className=\"member-name-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input fill\"\r\n            placeholder=\"Member Name\"\r\n            value={newMemberName}\r\n            onChange={handleChange}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n        </div>\r\n        <button\r\n          className={`member-form-submit ${newMemberName ? 'can-submit' : ''}`}\r\n          onClick={handleSubmit}\r\n        >\r\n          <i className=\"material-icons\">\r\n            person_add\r\n          </i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberForm;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { getGroupId, getGroupMembers } from '../../store/selectors';\r\nimport MemberActions from \"../../store/actions/MemberActions\";\r\nimport MemberForm from \"./MemberForm\";\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  currMemberIndex: state.indexCounter.members,\r\n  members: getGroupMembers(state, getGroupId(ownProps)),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  createMember: (name, memberId) =>\r\n    dispatch(MemberActions.addMember(name, memberId, getGroupId(ownProps))),\r\n});\r\n\r\nconst mergeProps = (stateProps, dispatchProps) => ({\r\n  createMember: name => dispatchProps.createMember(name, stateProps.currMemberIndex),\r\n  members: Object.values(stateProps.members || {}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(\r\n  MemberForm\r\n);\r\n","import React from 'react';\r\n\r\nexport const CardTitle = ({ title }) => (\r\n  <div className=\"card-title\">\r\n    <h6 className=\"title-text\">{title}</h6>\r\n    <hr className=\"title-line\" />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { CardTitle } from \"../.common\";\r\nimport \"../../styles/member-list.css\";\r\n\r\nconst EmptyMemberList = () => (\r\n  <div className=\"member-list-empty\">\r\n    <i className=\"member-list-empty-icon material-icons\">\r\n      person_outline\r\n    </i>\r\n    <div className=\"member-list-empty-text\">\r\n      <p>This group doesn't have any members.</p>\r\n      <p>Add a member using the form above.</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst MemberEntry = ({ name }) => (\r\n  <div className=\"member-container\">\r\n    <i className=\"member-icon fas fa-smile\" />\r\n    <h3 className=\"member-overview\">{name}</h3>\r\n  </div>\r\n);\r\n\r\nconst MemberList = ({ members }) => (\r\n  <div className=\"member-list card\">\r\n    <CardTitle title=\"Members\" />\r\n    {members.length === 0 ?\r\n      <EmptyMemberList /> :\r\n      members.map(member => <MemberEntry name={member.name}/>)\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default MemberList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { getGroupId, getGroupMembers } from '../../store/selectors'\r\nimport MemberList from \"./MemberList\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  members: Object.values(\r\n    getGroupMembers(state, getGroupId(ownProps)) || {}\r\n  ),\r\n});\r\n\r\nexport default connect(mapStateToProps)(MemberList);\r\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"../../styles/navigation.css\";\n\nconst NavButton = ({ to, children }) => (\n  <NavLink\n    className=\"nav-button\"\n    activeClassName=\"nav-active\"\n    to={to}\n  >\n    {children}\n  </NavLink>\n)\n\nconst Navigation = ({ context }) => (\n  <div className=\"nav-container\">\n    <NavButton to={`${context}/members`}>Members</NavButton>\n    <NavButton to={`${context}/expenses`}>Expenses</NavButton>\n    <NavButton to={`${context}/split`}>Split</NavButton>\n  </div>\n);\n\nexport default Navigation;\n","import { connect } from 'react-redux';\r\n\r\nimport { getGroupId } from '../../store/selectors';\r\nimport Navigation from './Navigation';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  context: `/group/${getGroupId(ownProps)}`,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export const ExpenseActionConstants = {\r\n  ADD_EXPENSE: 'ADD_EXPENSE'\r\n};\r\n\r\nexport const addExpense = (expenseId, groupId, description, amount, paidBy, paidFor) => ({\r\n  type: ExpenseActionConstants.ADD_EXPENSE,\r\n  expenseId,\r\n  groupId,\r\n  description,\r\n  amount,\r\n  paidBy,\r\n  paidFor,\r\n});\r\n\r\nexport default {\r\n  addExpense\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../../styles/expense-form.css\";\r\n\r\nconst ExpenseFormInput = ({ fieldName, ...props }) => (\r\n  <input\r\n    type=\"text\"\r\n    className={`expense-form-input form-input fill ${fieldName}-input`}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst MemberSelect = ({ fieldName, members, placeholder, ...props }) => (\r\n  <select\r\n    className={`expense-form-input form-input fill name-select ${fieldName}-input`}\r\n    {...props}\r\n  >\r\n    <option value=\"\" selected disabled>\r\n      {placeholder}\r\n    </option>\r\n    {members.map((member, index) =>\r\n      <option\r\n        key={`${fieldName} ${member.id}`}\r\n        value={member.memberId}\r\n      >\r\n        {member.name}\r\n      </option>\r\n    )}\r\n  </select>\r\n);\r\n\r\nconst useHandler = handleChange => {\r\n  return (event) => handleChange(event.target.value);\r\n};\r\n\r\nconst ExpenseForm = ({ members, createExpense }) => {\r\n  const [description, setDescription] = useState(null);\r\n  const [amount, setAmount] = useState(null);\r\n  const [paidBy, setPaidBy] = useState(null);\r\n  const [paidFor, setPaidFor] = useState(null);\r\n\r\n  const canSubmit = (description && amount > 0 && paidBy && paidFor);\r\n  const handleSubmit = () => {\r\n    if (canSubmit) {\r\n      createExpense(\r\n        description,\r\n        parseInt(amount),\r\n        paidBy,\r\n        paidFor\r\n      );\r\n      setDescription('');\r\n      setAmount('');\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense-form-container card\">\r\n      <div className=\"expense-form-row\">\r\n        <ExpenseFormInput\r\n          fieldName=\"description\"\r\n          placeholder=\"Expense Description\"\r\n          value={description}\r\n          onChange={useHandler(setDescription)}\r\n        />\r\n        <ExpenseFormInput\r\n          fieldName=\"amount\"\r\n          placeholder=\"Expense Amount\"\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={useHandler(setAmount)}\r\n        />\r\n      </div>\r\n      <div className=\"expense-form-row\">\r\n        <MemberSelect\r\n          fieldName=\"paidBy\"\r\n          placeholder=\"Paid by\"\r\n          members={members}\r\n          value={paidBy}\r\n          onChange={useHandler(setPaidBy)}\r\n        />\r\n        <MemberSelect\r\n          fieldName=\"paidFor\"\r\n          placeholder=\"Paid for\"\r\n          members={members}\r\n          value={paidFor}\r\n          onChange={useHandler(setPaidFor)}\r\n        />\r\n        <button\r\n          className={`expense-form-submit ${canSubmit ? 'can-submit' : ''}`}\r\n          onClick={handleSubmit}\r\n        >\r\n          <i className=\"material-icons\">\r\n            add_circle_outline\r\n          </i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ExpenseActions from \"../../store/actions/ExpenseActions\";\r\nimport { getGroupId, getGroupMembers } from '../../store/selectors';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  currExpenseIndex: state.indexCounter.expenses,\r\n  members: getGroupMembers(state, getGroupId(ownProps)),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  createExpense: (expenseId, ...args) =>\r\n    dispatch(ExpenseActions.addExpense(expenseId, getGroupId(ownProps), ...args)),\r\n});\r\n\r\nconst mergeProps = (stateProps, dispatchProps) => ({\r\n  members: Object.values(stateProps.members || {}),\r\n  createExpense: (...args) =>\r\n    dispatchProps.createExpense(stateProps.currExpenseIndex, ...args),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(\r\n  ExpenseForm\r\n);\r\n","import React from \"react\";\r\n\r\nimport { CardTitle } from \"../.common\";\r\nimport \"../../styles/expense-list.css\";\r\n\r\nconst ExpenseEntry = ({ expense }) => (\r\n  <div className=\"expense-container\">\r\n    <div className=\"expense-header\">\r\n      <span className=\"expense-description\">{expense.description}</span>\r\n      {`, `}\r\n      <span className=\"expense-amount\">{expense.amount}</span>\r\n    </div>\r\n    <div className=\"expense-details\">\r\n      Paid by <span className=\"expense-name-detail\">{expense.paidBy.name}</span>\r\n      {` `}\r\n      for <span className=\"expense-name-detail\">{expense.paidFor.name}.</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nconst ExpenseList = ({ expenses }) => (\r\n  <div className=\"expense-list card\">\r\n    <CardTitle title=\"Expenses\" />\r\n    {expenses.map(expense => <ExpenseEntry expense={expense} />)}\r\n  </div>\r\n);\r\n\r\nexport default ExpenseList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { getGroupId, getGroupExpenses } from '../../store/selectors'\r\nimport ExpenseList from \"./ExpenseList\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  expenses: Object.values(\r\n    getGroupExpenses(state, getGroupId(ownProps))\r\n  ),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ExpenseList);\r\n","import React from \"react\";\r\n\r\nimport { CardTitle } from \"../.common\";\r\nimport \"../../styles/suggested-payments-list.css\";\r\n\r\nconst SuggestionItem = ({ amount, from, to }) => (\r\n  <div className=\"suggestion\">\r\n    <span className=\"suggestion-detail name\">{from}</span>\r\n    {` pays `}\r\n    <span className=\"suggestion-detail amount\">{amount}</span>\r\n    {` to `}\r\n    <span className=\"suggestion-detail name\">{to}</span>\r\n  </div>\r\n)\r\n\r\nconst SuggestedPaymentsList = ({ suggestedPayments }) => (\r\n  <div className=\"suggestion-list card\">\r\n    <CardTitle title=\"Suggested Payments\" />\r\n    {suggestedPayments.map(suggestion => <SuggestionItem {...suggestion} />)}\r\n  </div>\r\n)\r\n\r\nexport default SuggestedPaymentsList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { getGroupId, getSuggestedPaymentsFromState } from '../../store/selectors'\r\nimport SuggestedPaymentsList from \"./SuggestedPaymentsList\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  suggestedPayments: getSuggestedPaymentsFromState(state, getGroupId(ownProps)),\r\n});\r\n\r\nexport default connect(mapStateToProps)(SuggestedPaymentsList);\r\n","import { GroupActionConstants } from '../actions/GroupActions';\r\nimport { MemberActionConstants } from '../actions/MemberActions';\r\nimport { ExpenseActionConstants } from '../actions/ExpenseActions';\r\n\r\nconst defaulter = {\r\n  1 : {\r\n    id: 1,\r\n    name: 'Trip to Jerusalem',\r\n    members: [1, 2, 3],\r\n    expenses: [1, 2, 3],\r\n    payments: [],\r\n  },\r\n  2 : {\r\n    id: 2,\r\n    name: \"Couple's Retreat\",\r\n    members: [4, 5],\r\n    expenses: [],\r\n    payments: [],\r\n  }\r\n}\r\n\r\nconst groups = (state = defaulter, action) => {\r\n  switch (action.type) {\r\n    case GroupActionConstants.ADD_GROUP:\r\n      return {\r\n        ...state,\r\n        [action.id]: {\r\n          id: action.id,\r\n          name: action.name,\r\n          members: [],\r\n          expenses: [],\r\n          payments: [],\r\n        }\r\n      };\r\n    case MemberActionConstants.ADD_MEMBER:\r\n      return {\r\n        ...state,\r\n        [action.groupId]: {\r\n          ...state[action.groupId],\r\n          members: [\r\n            ...state[action.groupId].members,\r\n            action.memberId,\r\n          ]\r\n        }\r\n      };\r\n    case ExpenseActionConstants.ADD_EXPENSE:\r\n      return {\r\n        ...state,\r\n        [action.groupId]: {\r\n          ...state[action.groupId],\r\n          expenses: [\r\n            ...state[action.groupId].expenses,\r\n            action.expenseId,\r\n          ]\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groups;\r\n","import { GroupActionConstants } from '../actions/GroupActions';\r\nimport { MemberActionConstants } from '../actions/MemberActions';\r\nimport { ExpenseActionConstants } from '../actions/ExpenseActions';\r\n\r\nconst initialState = {\r\n  groups: 3,\r\n  members: 6,\r\n  expenses: 4,\r\n  payments: 1,\r\n}\r\n\r\nconst indexCounter = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GroupActionConstants.ADD_GROUP:\r\n      return {\r\n        ...state,\r\n        groups: state.groups + 1,\r\n      };\r\n    case MemberActionConstants.ADD_MEMBER:\r\n      return {\r\n        ...state,\r\n        members: state.members + 1,\r\n      };\r\n    case ExpenseActionConstants.ADD_EXPENSE:\r\n      return {\r\n        ...state,\r\n        expenses: state.expenses + 1,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default indexCounter;\r\n","import { MemberActionConstants } from '../actions/MemberActions';\r\n\r\nconst defaulter = {\r\n  1 : {\r\n    name: 'Louise',\r\n    memberId: 1,\r\n    groupId: 1,\r\n  },\r\n  2: {\r\n    name: 'Cole',\r\n    memberId: 2,\r\n    groupId: 1,\r\n  },\r\n  3: {\r\n    name: 'Shane',\r\n    memberId: 3,\r\n    groupId: 1,\r\n  },\r\n  4: {\r\n    name: 'Jay',\r\n    memberId: 4,\r\n    groupId: 2,\r\n  },\r\n  5: {\r\n    name: 'Hans',\r\n    memberId: 5,\r\n    groupId: 2,\r\n  }\r\n}\r\n\r\nconst members = (state = defaulter, action) => {\r\n  switch (action.type) {\r\n    case MemberActionConstants.ADD_MEMBER:\r\n      return {\r\n        ...state,\r\n        [action.memberId]: {\r\n          name: action.name,\r\n          memberId: action.memberId,\r\n          groupId: action.groupId,\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default members;\r\n","import { ExpenseActionConstants } from '../actions/ExpenseActions';\r\n\r\nconst defaulter = {\r\n  1: {\r\n    expenseId: 1,\r\n    groupId: 1,\r\n    description: 'Potion',\r\n    amount: 20,\r\n    paidBy: 1,\r\n    paidFor: 2,\r\n  },\r\n  2: {\r\n    expenseId: 2,\r\n    groupId: 1,\r\n    description: 'Elixir',\r\n    amount: 30,\r\n    paidBy: 1,\r\n    paidFor: 3,\r\n  },\r\n  3: {\r\n    expenseId: 3,\r\n    groupId: 1,\r\n    description: 'Revive',\r\n    amount: 5,\r\n    paidBy: 3,\r\n    paidFor: 2,\r\n  }\r\n}\r\n\r\nconst expenses = (state = defaulter, action) => {\r\n  switch (action.type) {\r\n    case ExpenseActionConstants.ADD_EXPENSE:\r\n      return {\r\n        ...state,\r\n        [action.expenseId]: {\r\n          expenseId: action.expenseId,\r\n          groupId: action.groupId,\r\n          description: action.description,\r\n          amount: action.amount,\r\n          paidBy: action.paidBy,\r\n          paidFor: action.paidFor,\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default expenses;\r\n","import GroupReducer from './GroupReducer';\r\nimport SelectedGroupReducer from './SelectedGroupReducer';\r\nimport IndexCounterReducer from './IndexCounterReducer';\r\nimport MemberReducer from './MemberReducer';\r\nimport ExpenseReducer from './ExpenseReducer';\r\n\r\nexport default {\r\n  GroupReducer,\r\n  IndexCounterReducer,\r\n  SelectedGroupReducer,\r\n  MemberReducer,\r\n  ExpenseReducer,\r\n};\r\n","import { GroupActionConstants } from '../actions/GroupActions';\r\n\r\nconst selectedGroup = (state = null, action) => {\r\n  switch (action.type) {\r\n    case GroupActionConstants.ADD_GROUP:\r\n      return action.id;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedGroup;\r\n","import { createStore } from 'redux';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport reducers from './reducers';\r\n\r\n\r\nexport const reducer = combineReducers({\r\n  groups: reducers.GroupReducer,\r\n  indexCounter: reducers.IndexCounterReducer,\r\n  members: reducers.MemberReducer,\r\n  expenses: reducers.ExpenseReducer,\r\n});\r\n\r\nexport default createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/base.css';\nimport './styles/gradient-bg.css';\n\nimport GroupField from './components/GroupField';\nimport MemberForm from './components/MemberForm';\nimport MemberList from './components/MemberList';\nimport Navigation from './components/Navigation';\nimport ExpenseForm from './components/ExpenseForm';\nimport ExpenseList from './components/ExpenseList';\nimport SuggestedPaymentsList from './components/SuggestedPaymentsList';\n\nimport store from './store';\n\nconst App = () =>\n  <Provider store={store}>\n    <Router>\n      <div className=\"content\">\n        <Route\n          exact\n          path=\"/\"\n          component={GroupField}\n        />\n        <Route\n          path=\"/group/:groupId\"\n          render={props =>\n            <>\n              <GroupField {...props} />\n              <Navigation {...props} />\n            </>\n          }\n        />\n        <Route\n          path=\"/group/:groupId/members\"\n          render={props =>\n            <>\n              <MemberForm {...props} />\n              <MemberList {...props} />\n            </>\n          }\n        />\n        <Route\n          path=\"/group/:groupId/expenses\"\n          render={props =>\n            <>\n              <ExpenseForm {...props} />\n              <ExpenseList {...props} />\n            </>\n          }\n        />\n        <Route\n          path=\"/group/:groupId/split\"\n          render={props =>\n            <>\n              <SuggestedPaymentsList {...props} />\n            </>\n          }\n        />\n      </div>\n    </Router>\n  </Provider>;\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}